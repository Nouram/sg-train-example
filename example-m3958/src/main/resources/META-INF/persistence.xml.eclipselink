<?xml version="1.0" encoding="UTF-8"?>
	<!--
		-javaagent:D:\eworkspace\firstgwt\war\WEB-INF\lib\openjpa-all-2.0.0-beta2.jar
	-->
	<!--
		Licensed to the Apache Software Foundation (ASF) under one or more
		contributor license agreements. See the NOTICE file distributed with
		this work for additional information regarding copyright ownership.
		The ASF licenses this file to you under the Apache License, Version
		2.0 (the "License"); you may not use this file except in compliance
		with the License. You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0 Unless required by
		applicable law or agreed to in writing, software distributed under the
		License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
		CONDITIONS OF ANY KIND, either express or implied. See the License for
		the specific language governing permissions and limitations under the
		License.
	-->
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0">

	<persistence-unit name="p-unit" transaction-type="RESOURCE_LOCAL">
		<provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
		<class>com.m3958.firstgwt.model.Lgb</class>
		<class>com.m3958.firstgwt.model.Asset</class>		
		<class>com.m3958.firstgwt.model.User</class>
		<class>com.m3958.firstgwt.model.Role</class>
		<class>com.m3958.firstgwt.model.Permission</class>
		<class>com.m3958.firstgwt.model.Department</class>
		<class>com.m3958.firstgwt.model.FieldEnum</class>
		<class>com.m3958.firstgwt.model.Operation</class>		
		<class>com.m3958.firstgwt.model.Address</class>			
		<class>com.m3958.firstgwt.model.ObjectClassName</class>	
		<class>com.m3958.firstgwt.model.Shequ</class>
		<class>com.m3958.firstgwt.model.Family</class>
		<class>com.m3958.firstgwt.model.Career</class>
		<class>com.m3958.firstgwt.model.StepCareer</class>
		<class>com.m3958.firstgwt.model.House</class>	
		<class>com.m3958.firstgwt.model.Reward</class>						
		<class>com.m3958.firstgwt.model.Note</class>
		<class>com.m3958.firstgwt.model.Feedback</class>
		<class>com.m3958.firstgwt.model.CalEvent</class>
		<class>com.m3958.firstgwt.model.SiteConfig</class>
		<class>com.m3958.firstgwt.model.JrxmlFile</class>
		<class>com.m3958.firstgwt.model.Ftl</class>
		<class>com.m3958.firstgwt.model.FtlHistory</class>
		<class>com.m3958.firstgwt.model.FetchUrl</class>
		<class>com.m3958.firstgwt.model.ComponentPreference</class>
		<class>com.m3958.firstgwt.model.SavedFormQuery</class>
		<class>com.m3958.firstgwt.model.ProcessId</class>
		<class>com.m3958.firstgwt.model.Group</class>		
		<class>com.m3958.firstgwt.model.HelpMessage</class>
		<class>com.m3958.firstgwt.model.HelpTracker</class>			
		<class>com.m3958.firstgwt.model.Hmessage</class>
		<class>com.m3958.firstgwt.model.HmessageReceiver</class>
		<class>com.m3958.firstgwt.model.MenuLevel</class>
		<class>com.m3958.firstgwt.model.MenuItem</class>
		<class>com.m3958.firstgwt.model.AssetFolder</class>
		<class>com.m3958.firstgwt.model.Tag</class>						
		<class>com.m3958.firstgwt.model.WebSite</class>
		<class>com.m3958.firstgwt.model.WebHost</class>
		<class>com.m3958.firstgwt.model.Section</class>
		<class>com.m3958.firstgwt.model.Article</class>
								
		<properties>
			<property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://127.0.0.1/gwt?characterEncoding=utf8" />
		<!-- 
			<property name="eclipselink.logging.level" value="ALL"/>
			<property name="eclipselink.logging.file" value="e:/output.log"/>
			<property name="eclipselink.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="eclipselink.jdbc.url" value="jdbc:derby:C:/DerbyDatabases/hellojpa-database8;create=true" />
		 -->
			<!-- I work in this example without user / password.-->
			<property name="javax.persistence.jdbc.user" value="" />
			<property name="javax.persistence.jdbc.password" value="" />

			<!-- EclipseLink should create the database schema automatically -->

			<property name="eclipselink.ddl-generation" value="create-tables" />
			<property name="eclipselink.ddl-generation.output-mode" value="database" />
			
		</properties> 
		
		<!--
			A persistence unit is a set of listed persistent entities as well the
			configuration of an EntityManagerFactory. We configure each example
			in a separate persistence-unit.jdbc:hsqldb:test 
		
		<properties>

			<property name="openjpa.jdbc.SynchronizeMappings" value="buildSchema(ForeignKeys=true)" />
			<property name="openjpa.ConnectionDriverName" value="com.mysql.jdbc.Driver" />
			<property name="openjpa.ConnectionURL"
				value="jdbc:mysql://127.0.0.1/gwt?characterEncoding=utf8" />
				- 
			<property name="openjpa.jdbc.SynchronizeMappings" value="buildSchema(ForeignKeys=true)" />
			<property name="openjpa.ConnectionDriverName" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="openjpa.ConnectionURL"
				value="jdbc:derby:d:\derbysample;create=true" />
				 -
				
			<property name="openjpa.ConnectionUserName" value="" />
			<property name="openjpa.ConnectionPassword" value="" />
			
		</properties> 
		-->
	</persistence-unit>


	<!--
		We need to enumerate each persistent class first in the
		persistence.xml See: http://issues.apache.org/jira/browse/OPENJPA-78
	-->
	<persistence-unit name="none" transaction-type="RESOURCE_LOCAL">
		<mapping-file>reversemapping/orm.xml
		</mapping-file>
	</persistence-unit>

	<!--
		A persistence unit is a set of listed persistent entities as well the
		configuration of an EntityManagerFactory. We configure each example in
		a separate persistence-unit.
	-->
	<persistence-unit name="hellojpa" transaction-type="RESOURCE_LOCAL">
		<!--
			The default provider can be OpenJPA, or some other product. This
			element is optional if OpenJPA is the only JPA provider in the
			current classloading environment, but can be specified in cases where
			there are multiple JPA implementations available.
		-->
		<!--
			<provider> org.apache.openjpa.persistence.PersistenceProviderImpl
			</provider>
		-->

		<!-- We must enumerate each entity in the persistence unit -->

		<properties>
			<!--
				We can configure the default OpenJPA properties here. They happen to
				be commented out here since the provided examples all specify the
				values via System properties.
			-->

			<!--
				<property name="openjpa.ConnectionURL"
				value="jdbc:derby:openjpa-database;create=true"/> <property
				name="openjpa.ConnectionDriverName"
				value="org.apache.derby.jdbc.EmbeddedDriver"/> <property
				name="openjpa.ConnectionUserName" value="user"/> <property
				name="openjpa.ConnectionPassword" value="secret"/>
			-->
		</properties>
	</persistence-unit>

	<!-- persistence unit for the "relations" example -->
	<persistence-unit name="relations" transaction-type="RESOURCE_LOCAL">

	</persistence-unit>

	<!-- persistence unit for the "reversemapping" example -->
	<persistence-unit name="reversemapping"
		transaction-type="RESOURCE_LOCAL">
		<mapping-file>reversemapping/orm.xml
		</mapping-file>
	</persistence-unit>



</persistence>
